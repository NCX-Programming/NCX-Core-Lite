name: make all

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build-linux:

    runs-on: ubuntu-latest
    outputs:
      commit_tag: ${{ steps.build-linux.outputs.commit_tag }}
      commit_hash: ${{ steps.build-linux.outputs.commit_hash }}
      author_name: ${{ steps.build-linux.outputs.author_name }}
      committer_name: ${{ steps.build-linux.outputs.committer_name }}
      commit_subject: ${{ steps.build-linux.outputs.commit_subject }}
      commit_message: ${{ steps.build-linux.outputs.commit_message }}
      current_date: ${{ steps.commit.outputs.current_date }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        sudo apt update && \
        sudo apt install -y libcurl4-nss-dev libgtk-3-dev
    - name: Build Linux
      run: make linux
    - name: Pack Build Files
      run: |
        mkdir ~/NCX-Core-Lite-linux
        mv bin/* ~/NCX-Core-Lite-linux
    - name: Publish Build Files
      uses: actions/upload-artifact@v2
      with:
        path: ~/NCX-Core-Lite-linux/*
        name: NCX-Core-Lite-linux
  build-macos-intel:

    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        brew install gtk+3
    - name: Build macOS
      run: make macX86
    - name: Pack Build Files
      run: |
        mkdir ~/NCX-Core-Lite-macX86
        mv bin/* ~/NCX-Core-Lite-macX86
    - name: Publish Build Files
      uses: actions/upload-artifact@v2
      with:
        path: ~/NCX-Core-Lite-macX86
        name: NCX-Core-Lite-macX86
  # Uncomment job once macOS 11 is available
  #build-macos-arm:

    #runs-on: macos-11.0

    #steps:
    #- uses: actions/checkout@v2
    #- name: Install Dependencies
      #run: |
        #brew install gtk+3
    #- name: Build macOS
      #run: make macARM
    #- name: Pack Build Files
      #run: |
        #mkdir ~/theVaultC-macARM
        #mv bin/* ~/theVaultC-macARM
    #- name: Publish Build Files
      #uses: actions/upload-artifact@v2
      #with:
        #path: ~/theVaultC-macARM
        #name: theVaultC-macARM
  send_webhook:
      runs-on: ubuntu-latest
      needs: [build-linux, build-macos-intel]
      name: Send Discord webhook
      if: ${{ !startsWith(github.ref, 'refs/pull') }}
      env:
        CURRENT_DATE: ${{ needs.build-linux.outputs.current_date }}
        AUTHOR_NAME: ${{ needs.build-linux.outputs.author_name }}
        COMMITTER_NAME: ${{ needs.build-linux.outputs.committer_name }}
        COMMIT_SUBJECT: ${{ needs.build-linux.outputs.commit_subject }}
        COMMIT_MESSAGE: ${{ needs.build-linux.outputs.commit_message }}
      steps:
        - name: Send success webhook
          if: ${{ success() }}
          run: |
            curl -o send.sh https://raw.githubusercontent.com/NCX-Programming/discord-webhooks/master/send-ghactions.sh
            chmod +x send.sh
            ./send.sh success ${{ secrets.WEBHOOK_URL }}
        - name: Send failure webhook
          if: ${{ failure() }}
          run: |
            curl -o send.sh https://raw.githubusercontent.com/NCX-Programming/discord-webhooks/master/send-ghactions.sh
            chmod +x send.sh
            ./send.sh failure ${{ secrets.WEBHOOK_URL }}
